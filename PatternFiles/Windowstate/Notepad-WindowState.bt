//------------------------------------------------
//--- 010 Editor v14.0 Binary Template
//
//      File: Notepad-WindowState.bt
//   Authors: ogmini https://github.com/ogmini
//   Version: 0.2
//   Purpose: Template to make sense of the Window State file for Windows 11 Notepad
//  Category: Misc
// File Mask: *.bin 
//  ID Bytes: 4E 50 //NP
//   History: 
//   0.2   2024-03-14 ogmini: Added slack space. Comments and color improvements.
//   0.1   2024-03-12 ogmini: Initial version
//------------------------------------------------

//------------------------------------------------
//                   Structs
//------------------------------------------------

typedef struct {
    do {
        ubyte bytes;
    } while (bytes > 0x7f);
} Uleb128 <read=Uleb128ValueToStr>;

//------------------------------------------------
//                   Funcs
//------------------------------------------------

uint64 DecodeUleb128(Uleb128 &varint) {
    local uint64 val = 0;
    local int i;
    local uint64 num;
    for( i = 0; i < sizeof(varint); i++ ) {
        num = varint.bytes[i] & 0x7F;
        val |= num << (i * 7);
    }
    return val;
}
string Uleb128ValueToStr(Uleb128 &varint) {
    return Str("0x%X", DecodeUleb128(varint));
}

//------------------------------------------------
//                   File
//------------------------------------------------

struct FILE {
    struct HEADER {
        char    type[2] <comment="ID Bytes">;        
    } header <bgcolor=cLtGray>;

    Uleb128 sequenceNumber <bgcolor=cLtRed, comment="Sequence number for file">;
    Uleb128 bytestoCRC32 <bgcolor=cLtGray, comment="Provides easy way to know start of Slack Space">;
    ubyte delim;
    Uleb128 numberTabs <bgcolor=cYellow, comment="Number of Tabs Open">;

    struct TAB {
        GUID g <comment="GUID of Open Tab">;
    } tab[DecodeUleb128(file.numberTabs)] <bgcolor=cGreen, comment="Open Tabs in Order">;
    
    
   Uleb128 activeTab <bgcolor=cYellow, comment="Active Tab">;
      
   struct CoordTopLeft {
          uint32 coordx;
          uint32 coordy;
       } coordtopleft <bgcolor=cBlue, comment="Top Left Coordinate of Window">;

   struct CoordBottomRight {
          uint32 coordx;
          uint32 coordy;
       } coordbottomright <bgcolor=cLtBlue, comment="Bottom Right Coordinate of Window">;
       
   struct WindowSize {
        uint32 width;
        uint32 height;    
    } windowsize <bgcolor=cAqua, comment="Dimensions of Window">;
   
    
   ubyte delim;
   uint32 crc32 <format=hex, bgcolor=cLtGray, comment="CRC32 of all preceding bytes starting from the sequenceNumber">;
   
   while (!FEof())
   {
   ubyte slackspace <bgcolor=cDkGreen, comment="Slack Space - May contain recoverable information">; 
   }
} file;